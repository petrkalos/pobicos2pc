package org.lekkas.poclient.AppLoader;

import org.lekkas.poclient.PoApp;
import org.lekkas.poclient.PoAPI.PoAPI;

import android.util.Log;
import android.widget.Toast;

public class PoAppPillLoader implements PacketListener,PoAppPillLoaderI {
	
	/*
	 * Reminder: bytes are stored Little-Endian
	 */
	
	
	static int[] androidAppBundle = {   0xb1, 0x0a, 0x00, 0x00, 0x02, 0x00, 0xe6, 0x09, 
		  0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x2e, 0x00, 
		  0x00, 0x00, 0x31, 0xcc, 0x00, 0x00, 0x11, 0xe6, 
		  0x09, 0x04, 0x01, 0x00, 0x00, 0x07, 0x80, 0x00, 
		  0x08, 0xc6, 0x00, 0x03, 0x90, 0x01, 0x46, 0x09, 
		  0xaf, 0x92, 0xbf, 0x92, 0xcf, 0x92, 0xdf, 0x92, 
		  0xef, 0x92, 0xff, 0x92, 0x0f, 0x93, 0x1f, 0x93, 
		  0xcf, 0x93, 0xdf, 0x93, 0xcd, 0xb7, 0xde, 0xb7, 
		  0xc2, 0x54, 0xd0, 0x40, 0xde, 0xbf, 0xcd, 0xbf, 
		  0x10, 0x92, 0xec, 0x00, 0x10, 0x92, 0xeb, 0x00, 
		  0x83, 0xed, 0x90, 0xe0, 0x0e, 0x94, 0x12, 0x80, 
		  0x20, 0xe0, 0x37, 0xe2, 0x4e, 0xe1, 0x51, 0xe2, 
		  0x61, 0xe0, 0x5e, 0x01, 0x08, 0x94, 0xa1, 0x1c, 
		  0xb1, 0x1c, 0xc5, 0x01, 0x0e, 0x94, 0x16, 0x80, 
		  0xcc, 0x24, 0xdd, 0x24, 0x76, 0x01, 0x00, 0xe1, 
		  0x17, 0xe2, 0x20, 0xe0, 0xa5, 0x01, 0x62, 0xe3, 
		  0x7c, 0xec, 0x80, 0xe0, 0x90, 0xe8, 0x0e, 0x94, 
		  0x02, 0x80, 0xce, 0x5b, 0xdf, 0x4f, 0xde, 0xbf, 
		  0xcd, 0xbf, 0xdf, 0x91, 0xcf, 0x91, 0x1f, 0x91, 
		  0x0f, 0x91, 0xff, 0x90, 0xef, 0x90, 0xdf, 0x90, 
		  0xcf, 0x90, 0xbf, 0x90, 0xaf, 0x90, 0x08, 0x95, 
		  0xcf, 0x93, 0xdf, 0x93, 0xcd, 0xb7, 0xde, 0xb7, 
		  0xa8, 0x97, 0xde, 0xbf, 0xcd, 0xbf, 0xae, 0x01, 
		  0x47, 0x5f, 0x5f, 0x4f, 0xbe, 0x01, 0x6b, 0x5f, 
		  0x7f, 0x4f, 0xce, 0x01, 0x01, 0x96, 0x0e, 0x94, 
		  0x04, 0x80, 0x80, 0xe6, 0x90, 0xe0, 0x0e, 0x94, 
		  0x12, 0x80, 0xce, 0x01, 0x0d, 0x96, 0x0e, 0x94, 
		  0x08, 0x80, 0xce, 0x01, 0x0e, 0x96, 0x0e, 0x94, 
		  0x12, 0x80, 0xa8, 0x96, 0xde, 0xbf, 0xcd, 0xbf, 
		  0xdf, 0x91, 0xcf, 0x91, 0x08, 0x95, 0xcf, 0x92, 
		  0xdf, 0x92, 0xef, 0x92, 0xff, 0x92, 0x0f, 0x93, 
		  0x1f, 0x93, 0xcf, 0x93, 0xdf, 0x93, 0xcd, 0xb7, 
		  0xde, 0xb7, 0x6c, 0x97, 0xde, 0xbf, 0xcd, 0xbf, 
		  0x8d, 0xe7, 0x90, 0xe0, 0x0e, 0x94, 0x12, 0x80, 
		  0x80, 0x91, 0xe6, 0x00, 0x8f, 0x5f, 0x80, 0x93, 
		  0xe6, 0x00, 0x81, 0x50, 0x8e, 0x01, 0x0e, 0x5f, 
		  0x1f, 0x4f, 0x99, 0x27, 0x9f, 0x93, 0x8f, 0x93, 
		  0x88, 0xe9, 0x90, 0xe0, 0x9f, 0x93, 0x8f, 0x93, 
		  0x8d, 0xea, 0x90, 0xe0, 0x9f, 0x93, 0x8f, 0x93, 
		  0x1f, 0x93, 0x0f, 0x93, 0x0e, 0x94, 0xed, 0x00, 
		  0xf8, 0x01, 0x01, 0x90, 0x00, 0x20, 0xe9, 0xf7, 
		  0xe0, 0x1b, 0xe9, 0x83, 0x81, 0xef, 0xe8, 0x2e, 
		  0x80, 0xe0, 0xf8, 0x2e, 0x00, 0xe0, 0x10, 0xe0, 
		  0x8d, 0xb7, 0x9e, 0xb7, 0x08, 0x96, 0x9e, 0xbf, 
		  0x8d, 0xbf, 0x6e, 0x01, 0x08, 0x94, 0xc1, 0x1c, 
		  0xd1, 0x1c, 0x0c, 0xc0, 0xf7, 0x01, 0x61, 0x91, 
		  0x71, 0x91, 0x81, 0x91, 0x91, 0x91, 0x7f, 0x01, 
		  0x20, 0xe0, 0xa6, 0x01, 0x0e, 0x94, 0x05, 0x80, 
		  0x0f, 0x5f, 0x1f, 0x4f, 0x80, 0x91, 0xeb, 0x00, 
		  0x90, 0x91, 0xec, 0x00, 0x08, 0x17, 0x19, 0x07, 
		  0x6c, 0xf3, 0x48, 0xee, 0x53, 0xe0, 0x60, 0xe0, 
		  0x70, 0xe0, 0x80, 0xe0, 0x0e, 0x94, 0x09, 0x80, 
		  0x6c, 0x96, 0xde, 0xbf, 0xcd, 0xbf, 0xdf, 0x91, 
		  0xcf, 0x91, 0x1f, 0x91, 0x0f, 0x91, 0xff, 0x90, 
		  0xef, 0x90, 0xdf, 0x90, 0xcf, 0x90, 0x08, 0x95, 
		  0x87, 0xeb, 0x90, 0xe0, 0x0e, 0x94, 0x12, 0x80, 
		  0x80, 0x91, 0xeb, 0x00, 0x90, 0x91, 0xec, 0x00, 
		  0x88, 0x0f, 0x99, 0x1f, 0x88, 0x0f, 0x99, 0x1f, 
		  0x4d, 0xee, 0x50, 0xe0, 0x67, 0xee, 0x70, 0xe0, 
		  0x8f, 0x50, 0x9f, 0x4f, 0x0e, 0x94, 0x04, 0x80, 
		  0x80, 0x91, 0xeb, 0x00, 0x90, 0x91, 0xec, 0x00, 
		  0x01, 0x96, 0x90, 0x93, 0xec, 0x00, 0x80, 0x93, 
		  0xeb, 0x00, 0x48, 0xee, 0x53, 0xe0, 0x60, 0xe0, 
		  0x70, 0xe0, 0x80, 0xe0, 0x0e, 0x94, 0x09, 0x80, 
		  0x08, 0x95, 0xa0, 0xe1, 0xb0, 0xe0, 0xe2, 0xef, 
		  0xf0, 0xe0, 0x87, 0xc3, 0x0f, 0x89, 0x18, 0x8d, 
		  0x86, 0xe0, 0x8e, 0x83, 0x1c, 0x83, 0x0b, 0x83, 
		  0x8f, 0xef, 0x9f, 0xe7, 0x98, 0x87, 0x8f, 0x83, 
		  0x4c, 0x2f, 0x5d, 0x2f, 0x45, 0x5e, 0x5f, 0x4f, 
		  0x5a, 0x83, 0x49, 0x83, 0x69, 0x8d, 0x7a, 0x8d, 
		  0x8c, 0x2f, 0x9d, 0x2f, 0x03, 0x96, 0x0a, 0xd0, 
		  0x29, 0x85, 0x3a, 0x85, 0x02, 0x0f, 0x13, 0x1f, 
		  0xf1, 0x2f, 0xe0, 0x2f, 0x10, 0x82, 0xe4, 0xe0, 
		  0x60, 0x96, 0x83, 0xc3, 0xa7, 0xe1, 0xb0, 0xe0, 
		  0xe7, 0xe1, 0xf1, 0xe0, 0x54, 0xc3, 0x88, 0x24, 
		  0x99, 0x24, 0xaa, 0x24, 0xbb, 0x24, 0x48, 0x2e, 
		  0x59, 0x2e, 0x7c, 0x8b, 0x6b, 0x8b, 0x64, 0x2e, 
		  0x75, 0x2e, 0xf9, 0x2f, 0xe8, 0x2f, 0x17, 0x82, 
		  0x16, 0x82, 0x83, 0x81, 0x81, 0xfd, 0x03, 0xc0, 
		  0x8f, 0xef, 0x9f, 0xef, 0xb0, 0xc2, 0xcc, 0x24, 
		  0xdd, 0x24, 0x2c, 0x2f, 0x3d, 0x2f, 0x2f, 0x5f, 
		  0x3f, 0x4f, 0x3f, 0x8b, 0x2e, 0x8b, 0x93, 0xc2, 
		  0xc0, 0xfe, 0x76, 0xc2, 0x83, 0x2d, 0x80, 0x53, 
		  0x8a, 0x30, 0xf0, 0xf4, 0x30, 0xe3, 0x33, 0x16, 
		  0x41, 0xf4, 0x8d, 0x85, 0x88, 0x23, 0x29, 0xf4, 
		  0xc3, 0xfc, 0x03, 0xc0, 0xe0, 0xe0, 0xf1, 0xe0, 
		  0x77, 0xc0, 0xfd, 0x85, 0x8f, 0x2f, 0x99, 0x27, 
		  0x87, 0xfd, 0x90, 0x95, 0x6a, 0xe0, 0x70, 0xe0, 
		  0xe5, 0xd2, 0x80, 0x53, 0x83, 0x0d, 0x8d, 0x87, 
		  0x87, 0xff, 0x02, 0xc0, 0x2f, 0xe7, 0x2d, 0x87, 
		  0xc3, 0xfc, 0x6b, 0xc2, 0x2d, 0x84, 0x69, 0xc2, 
		  0x3d, 0x2d, 0x2c, 0x2d, 0x28, 0x70, 0x30, 0x70, 
		  0xc3, 0xfe, 0x05, 0xc0, 0x8d, 0x85, 0x88, 0x23, 
		  0x11, 0xf4, 0x91, 0xe0, 0x9d, 0x87, 0xe7, 0xe6, 
		  0xe3, 0x15, 0x6c, 0xf1, 0xf5, 0xe6, 0x3f, 0x16, 
		  0x0c, 0xf0, 0x68, 0xc0, 0x83, 0xe5, 0x38, 0x16, 
		  0x09, 0xf4, 0x8d, 0xc0, 0x83, 0x15, 0xbc, 0xf0, 
		  0x9b, 0xe2, 0x39, 0x16, 0x09, 0xf4, 0x42, 0xc0, 
		  0x93, 0x15, 0x4c, 0xf0, 0xe0, 0xe2, 0x3e, 0x16, 
		  0x09, 0xf4, 0x40, 0xc0, 0xf3, 0xe2, 0x3f, 0x16, 
		  0x09, 0xf0, 0x26, 0xc2, 0x43, 0xc0, 0x2d, 0xe2, 
		  0x32, 0x16, 0xe9, 0xf1, 0x3e, 0xe2, 0x33, 0x16, 
		  0x09, 0xf0, 0x1e, 0xc2, 0x40, 0xc0, 0x83, 0xe6, 
		  0x38, 0x16, 0x09, 0xf4, 0x4d, 0xc0, 0x83, 0x15, 
		  0x0c, 0xf4, 0x85, 0xc0, 0x98, 0xe5, 0x39, 0x16, 
		  0x09, 0xf0, 0x12, 0xc2, 0x20, 0xc0, 0xe0, 0xe7, 
		  0x3e, 0x16, 0x09, 0xf4, 0xaa, 0xc0, 0xe3, 0x15, 
		  0x5c, 0xf0, 0xfc, 0xe6, 0x3f, 0x16, 0x89, 0xf1, 
		  0x2f, 0xe6, 0x32, 0x16, 0x89, 0xf0, 0x39, 0xe6, 
		  0x33, 0x16, 0x09, 0xf0, 0x01, 0xc2, 0x6f, 0xc0, 
		  0x85, 0xe7, 0x38, 0x16, 0x09, 0xf4, 0xa1, 0xc0, 
		  0x98, 0xe7, 0x39, 0x16, 0x41, 0xf0, 0xe3, 0xe7, 
		  0x3e, 0x16, 0x09, 0xf0, 0xf5, 0xc1, 0x31, 0xc0, 
		  0xf8, 0xe0, 0xf8, 0x8b, 0x96, 0xc0, 0x20, 0xe1, 
		  0x28, 0x8b, 0x93, 0xc0, 0x80, 0xe1, 0x90, 0xe0, 
		  0xc8, 0x2a, 0xd9, 0x2a, 0xe0, 0xe2, 0xf0, 0xe0, 
		  0xce, 0x2a, 0xdf, 0x2a, 0x02, 0xc2, 0x20, 0xe8, 
		  0x30, 0xe0, 0x0d, 0xc0, 0x80, 0xe4, 0x90, 0xe0, 
		  0xc8, 0x2a, 0xd9, 0x2a, 0xfa, 0xc1, 0xe8, 0xe0, 
		  0xf0, 0xe0, 0xce, 0x2a, 0xdf, 0x2a, 0x1d, 0x86, 
		  0xf4, 0xc1, 0x24, 0xe0, 0x30, 0xe0, 0xc2, 0x2a, 
		  0xd3, 0x2a, 0xef, 0xc1, 0x3f, 0xe3, 0x83, 0x2e, 
		  0x2a, 0x94, 0x23, 0xe6, 0x32, 0x2e, 0x4d, 0xc1, 
		  0xf7, 0x2d, 0xe6, 0x2d, 0x80, 0x80, 0x2a, 0x94, 
		  0x22, 0xe0, 0x30, 0xe0, 0x62, 0x0e, 0x73, 0x1e, 
		  0x44, 0xc1, 0xf7, 0x2d, 0xe6, 0x2d, 0xa0, 0x81, 
		  0xb1, 0x81, 0x8a, 0x2e, 0x9b, 0x2e, 0x23, 0x2b, 
		  0x49, 0xf0, 0xfd, 0x85, 0x6f, 0x2f, 0x77, 0x27, 
		  0x67, 0xfd, 0x70, 0x95, 0x8a, 0x2f, 0x9b, 0x2f, 
		  0x05, 0xd2, 0x19, 0xc0, 0xfb, 0x2f, 0xea, 0x2f, 
		  0x01, 0x90, 0x00, 0x20, 0xe9, 0xf7, 0x31, 0x97, 
		  0xea, 0x1b, 0xe8, 0x8b, 0x11, 0xc0, 0xf7, 0x2d, 
		  0xe6, 0x2d, 0x80, 0x81, 0x91, 0x81, 0x88, 0x2e, 
		  0x99, 0x2e, 0x23, 0x2b, 0x39, 0xf0, 0xfd, 0x85, 
		  0x6f, 0x2f, 0x77, 0x27, 0x67, 0xfd, 0x70, 0x95, 
		  0xe0, 0xd1, 0x01, 0xc0, 0xd3, 0xd1, 0x88, 0x8b, 
		  0x22, 0xe0, 0x30, 0xe0, 0x62, 0x0e, 0x73, 0x1e, 
		  0x38, 0x89, 0x23, 0x1a, 0x12, 0xc1, 0xc2, 0xfe, 
		  0x09, 0xc0, 0xf7, 0x2d, 0xe6, 0x2d, 0x80, 0x81, 
		  0x91, 0x81, 0xa2, 0x81, 0xb3, 0x81, 0x24, 0xe0, 
		  0x30, 0xe0, 0x0a, 0xc0, 0xf7, 0x2d, 0xe6, 0x2d, 
		  0x80, 0x81, 0x91, 0x81, 0xaa, 0x27, 0x97, 0xfd, 
		  0xa0, 0x95, 0xba, 0x2f, 0x22, 0xe0, 0x30, 0xe0, 
		  0x62, 0x0e, 0x73, 0x1e, 0x88, 0x2e, 0x99, 0x2e, 
		  0xaa, 0x2e, 0xbb, 0x2e, 0xb7, 0xff, 0x0c, 0xc0, 
		  0x82, 0xe0, 0x90, 0xe0, 0xc8, 0x2a, 0xd9, 0x2a, 
		  0xb0, 0x94, 0xa0, 0x94, 0x90, 0x94, 0x80, 0x94, 
		  0x81, 0x1c, 0x91, 0x1c, 0xa1, 0x1c, 0xb1, 0x1c, 
		  0xef, 0xeb, 0xff, 0xef, 0xce, 0x22, 0xdf, 0x22, 
		  0x25, 0xc0, 0x20, 0xe4, 0x30, 0xe0, 0xc2, 0x2a, 
		  0xd3, 0x2a, 0x98, 0xe7, 0x39, 0x2e, 0x30, 0xe1, 
		  0x38, 0x8b, 0xc2, 0xfe, 0x09, 0xc0, 0xf7, 0x2d, 
		  0xe6, 0x2d, 0x80, 0x81, 0x91, 0x81, 0xa2, 0x81, 
		  0xb3, 0x81, 0x24, 0xe0, 0x30, 0xe0, 0x08, 0xc0, 
		  0xf7, 0x2d, 0xe6, 0x2d, 0x80, 0x81, 0x91, 0x81, 
		  0xaa, 0x27, 0xbb, 0x27, 0x22, 0xe0, 0x30, 0xe0, 
		  0x62, 0x0e, 0x73, 0x1e, 0x88, 0x2e, 0x99, 0x2e, 
		  0xaa, 0x2e, 0xbb, 0x2e, 0x8f, 0xec, 0x9f, 0xef, 
		  0xc8, 0x22, 0xd9, 0x22, 0x1b, 0x2d, 0x0a, 0x2d, 
		  0xf9, 0x2c, 0xe8, 0x2c, 0xfd, 0x2f, 0xec, 0x2f, 
		  0x31, 0x96, 0xff, 0x87, 0xee, 0x87, 0xf8, 0x89, 
		  0x8f, 0x2e, 0x99, 0x24, 0xaa, 0x24, 0xbb, 0x24, 
		  0x23, 0x2d, 0x21, 0x52, 0x2d, 0x8b, 0x91, 0x2f, 
		  0x80, 0x2f, 0x7f, 0x2d, 0x6e, 0x2d, 0x5b, 0x2d, 
		  0x4a, 0x2d, 0x39, 0x2d, 0x28, 0x2d, 0xc4, 0xd1, 
		  0x6a, 0x30, 0x1c, 0xf0, 0x3d, 0x89, 0x63, 0x0f, 
		  0x01, 0xc0, 0x60, 0x5d, 0xee, 0x85, 0xff, 0x85, 
		  0x61, 0x93, 0xff, 0x87, 0xee, 0x87, 0x91, 0x2f, 
		  0x80, 0x2f, 0x7f, 0x2d, 0x6e, 0x2d, 0x5b, 0x2d, 
		  0x4a, 0x2d, 0x39, 0x2d, 0x28, 0x2d, 0xb0, 0xd1, 
		  0xe2, 0x2e, 0xf3, 0x2e, 0x04, 0x2f, 0x15, 0x2f, 
		  0x21, 0x15, 0x31, 0x05, 0x41, 0x05, 0x51, 0x05, 
		  0xd1, 0xf6, 0x88, 0x24, 0x99, 0x24, 0xaa, 0x24, 
		  0xbb, 0x24, 0x4e, 0x85, 0xfe, 0x89, 0x4f, 0x1b, 
		  0x84, 0x2e, 0x9d, 0x2d, 0x8c, 0x2d, 0x82, 0x73, 
		  0x90, 0x70, 0x89, 0x2b, 0x09, 0xf0, 0x2a, 0x94, 
		  0xc6, 0xfe, 0x07, 0xc0, 0x28, 0x89, 0x20, 0x31, 
		  0x11, 0xf4, 0x82, 0xe0, 0x01, 0xc0, 0x81, 0xe0, 
		  0x28, 0x1a, 0xc3, 0xfe, 0x12, 0xc0, 0x8d, 0x85, 
		  0x28, 0x2f, 0x33, 0x27, 0x27, 0xfd, 0x30, 0x95, 
		  0x84, 0x2f, 0x99, 0x27, 0x82, 0x17, 0x93, 0x07, 
		  0x2c, 0xf0, 0xe7, 0xef, 0xff, 0xef, 0xce, 0x22, 
		  0xdf, 0x22, 0x03, 0xc0, 0xfd, 0x85, 0xf4, 0x1b, 
		  0xfd, 0x87, 0x1d, 0x2d, 0x0c, 0x2d, 0x08, 0x70, 
		  0x10, 0x70, 0xc3, 0xfe, 0x03, 0xc0, 0x2d, 0x85, 
		  0x22, 0x1a, 0x01, 0xc0, 0x24, 0x1a, 0x9d, 0x2d, 
		  0x8c, 0x2d, 0x80, 0x78, 0x91, 0x70, 0x89, 0x2b, 
		  0x31, 0xf0, 0x0a, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 
		  0x80, 0xe2, 0x90, 0xe0, 0x23, 0xd1, 0x2a, 0x94, 
		  0x82, 0x2d, 0x8f, 0x5f, 0x18, 0x16, 0xb4, 0xf3, 
		  0xc1, 0xfe, 0x05, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 
		  0x8d, 0xe2, 0x90, 0xe0, 0x0d, 0xc0, 0xc4, 0xfe, 
		  0x05, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 0x8b, 0xe2, 
		  0x90, 0xe0, 0x06, 0xc0, 0xc5, 0xfe, 0x05, 0xc0, 
		  0x75, 0x2d, 0x64, 0x2d, 0x80, 0xe2, 0x90, 0xe0, 
		  0x09, 0xd1, 0xc6, 0xfe, 0x0f, 0xc0, 0x75, 0x2d, 
		  0x64, 0x2d, 0x80, 0xe3, 0x90, 0xe0, 0x02, 0xd1, 
		  0x38, 0x89, 0x30, 0x31, 0x39, 0xf4, 0x75, 0x2d, 
		  0x64, 0x2d, 0x83, 0x2d, 0x99, 0x27, 0x87, 0xfd, 
		  0x90, 0x95, 0xf8, 0xd0, 0xd0, 0xfc, 0x06, 0xc0, 
		  0x0a, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 0x80, 0xe3, 
		  0x90, 0xe0, 0xf0, 0xd0, 0x2a, 0x94, 0x82, 0x2d, 
		  0x8f, 0x5f, 0x18, 0x16, 0xb4, 0xf3, 0x01, 0x2b, 
		  0x31, 0xf4, 0x0b, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 
		  0x80, 0xe3, 0x90, 0xe0, 0xe3, 0xd0, 0x8d, 0x85, 
		  0x81, 0x50, 0x8d, 0x87, 0x8f, 0x5f, 0x18, 0x16, 
		  0xac, 0xf3, 0xfd, 0x2d, 0xec, 0x2d, 0xe0, 0x78, 
		  0xf0, 0x70, 0xfa, 0x8b, 0xe9, 0x8b, 0xc7, 0xfe, 
		  0x06, 0xc0, 0x0a, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 
		  0x80, 0xe2, 0x90, 0xe0, 0xcf, 0xd0, 0x2a, 0x94, 
		  0x82, 0x2d, 0x8f, 0x5f, 0x18, 0x16, 0xb4, 0xf3, 
		  0xf3, 0xe6, 0x3f, 0x16, 0x41, 0xf4, 0x75, 0x2d, 
		  0x64, 0x2d, 0x88, 0x2d, 0x99, 0x27, 0x87, 0xfd, 
		  0x90, 0x95, 0xc0, 0xd0, 0x51, 0xc0, 0x23, 0xe7, 
		  0x32, 0x16, 0xd9, 0xf4, 0xd9, 0x2c, 0xc8, 0x2c, 
		  0xf9, 0x2c, 0xe8, 0x2c, 0x18, 0x89, 0x0b, 0xc0, 
		  0xff, 0x2d, 0xee, 0x2d, 0x81, 0x91, 0xee, 0x2e, 
		  0xff, 0x2e, 0x75, 0x2d, 0x64, 0x2d, 0x99, 0x27, 
		  0x87, 0xfd, 0x90, 0x95, 0xab, 0xd0, 0x11, 0x50, 
		  0x98, 0xf7, 0x8c, 0x2c, 0x9d, 0x2c, 0xf8, 0x89, 
		  0x8f, 0x0e, 0x91, 0x1c, 0x2f, 0xef, 0x28, 0x8b, 
		  0x33, 0xc0, 0x33, 0xe5, 0x33, 0x16, 0x19, 0xf0, 
		  0x0e, 0x85, 0x1f, 0x85, 0x26, 0xc0, 0xd9, 0x2c, 
		  0xc8, 0x2c, 0x19, 0x2d, 0x08, 0x2d, 0xf8, 0x88, 
		  0x0a, 0xc0, 0xf1, 0x2f, 0xe0, 0x2f, 0xc8, 0x95, 
		  0x80, 0x2d, 0x75, 0x2d, 0x64, 0x2d, 0x99, 0x27, 
		  0x8d, 0xd0, 0x0f, 0x5f, 0x1f, 0x4f, 0xfa, 0x94, 
		  0xff, 0xef, 0xff, 0x16, 0x91, 0xf7, 0x8c, 0x2c, 
		  0x9d, 0x2c, 0x28, 0x89, 0x82, 0x0e, 0x91, 0x1c, 
		  0xf8, 0x8b, 0x12, 0xc0, 0xf1, 0x2f, 0xe0, 0x2f, 
		  0x82, 0x91, 0x0e, 0x2f, 0x1f, 0x2f, 0x75, 0x2d, 
		  0x64, 0x2d, 0x99, 0x27, 0x87, 0xfd, 0x90, 0x95, 
		  0x75, 0xd0, 0x2e, 0x89, 0x3f, 0x89, 0x02, 0x17, 
		  0x13, 0x07, 0x81, 0xf7, 0x1f, 0x87, 0x0e, 0x87, 
		  0x89, 0x89, 0x9a, 0x89, 0x89, 0x2b, 0x31, 0xf4, 
		  0x26, 0xc0, 0x75, 0x2d, 0x64, 0x2d, 0x80, 0xe2, 
		  0x90, 0xe0, 0x64, 0xd0, 0x2a, 0x94, 0x82, 0x2d, 
		  0x8f, 0x5f, 0x18, 0x16, 0xb4, 0xf3, 0x1b, 0xc0, 
		  0x75, 0x2d, 0x64, 0x2d, 0x83, 0x2d, 0x99, 0x27, 
		  0x87, 0xfd, 0x90, 0x95, 0x57, 0xd0, 0x13, 0xc0, 
		  0x95, 0xe2, 0x39, 0x16, 0x41, 0xf4, 0xea, 0xe0, 
		  0xe8, 0x8b, 0x22, 0x24, 0x1d, 0x86, 0x81, 0xe0, 
		  0xc8, 0x2e, 0xd1, 0x2c, 0x0a, 0xc0, 0x75, 0x2d, 
		  0x64, 0x2d, 0x83, 0x2d, 0x99, 0x27, 0x87, 0xfd, 
		  0x90, 0x95, 0x44, 0xd0, 0x02, 0xc0, 0xcc, 0x24, 
		  0xdd, 0x24, 0x2b, 0x89, 0x3c, 0x89, 0x2f, 0x5f, 
		  0x3f, 0x4f, 0x3c, 0x8b, 0x2b, 0x8b, 0xf5, 0x2d, 
		  0xe4, 0x2d, 0x83, 0x81, 0x83, 0xff, 0x05, 0xc0, 
		  0xeb, 0x89, 0xfc, 0x89, 0xc8, 0x95, 0x30, 0x2c, 
		  0x03, 0xc0, 0xeb, 0x89, 0xfc, 0x89, 0x30, 0x80, 
		  0x33, 0x20, 0x09, 0xf0, 0x5d, 0xcd, 0xf5, 0x2d, 
		  0xe4, 0x2d, 0x86, 0x81, 0x97, 0x81, 0xe2, 0xe1, 
		  0x67, 0x96, 0xa9, 0xc0, 0xe8, 0x2f, 0xf9, 0x2f, 
		  0xc8, 0x95, 0x31, 0x96, 0x00, 0x20, 0xe1, 0xf7, 
		  0x80, 0x95, 0x90, 0x95, 0x8e, 0x0f, 0x9f, 0x1f, 
		  0x08, 0x95, 0xe8, 0x2f, 0xf9, 0x2f, 0xc8, 0x95, 
		  0x31, 0x96, 0x61, 0x50, 0x70, 0x40, 0x01, 0x10, 
		  0xd0, 0xf7, 0x80, 0x95, 0x90, 0x95, 0x8e, 0x0f, 
		  0x9f, 0x1f, 0x08, 0x95, 0xe8, 0x2f, 0xf9, 0x2f, 
		  0x61, 0x50, 0x70, 0x40, 0x01, 0x90, 0x01, 0x10, 
		  0xd8, 0xf7, 0x80, 0x95, 0x90, 0x95, 0x8e, 0x0f, 
		  0x9f, 0x1f, 0x08, 0x95, 0x0f, 0x93, 0x1f, 0x93, 
		  0xcf, 0x93, 0xdf, 0x93, 0x08, 0x2f, 0x19, 0x2f, 
		  0xd7, 0x2f, 0xc6, 0x2f, 0x8b, 0x81, 0x99, 0x27, 
		  0x81, 0xff, 0x1b, 0xc0, 0x82, 0xff, 0x0d, 0xc0, 
		  0x2e, 0x81, 0x3f, 0x81, 0x8c, 0x81, 0x9d, 0x81, 
		  0x28, 0x17, 0x39, 0x07, 0x64, 0xf4, 0xe8, 0x81, 
		  0xf9, 0x81, 0x01, 0x93, 0xf9, 0x83, 0xe8, 0x83, 
		  0x06, 0xc0, 0xe8, 0x85, 0xf9, 0x85, 0x80, 0x2f, 
		  0x09, 0x95, 0x89, 0x2b, 0x31, 0xf4, 0x8e, 0x81, 
		  0x9f, 0x81, 0x01, 0x96, 0x9f, 0x83, 0x8e, 0x83, 
		  0x02, 0xc0, 0x0f, 0xef, 0x1f, 0xef, 0x91, 0x2f, 
		  0x80, 0x2f, 0xdf, 0x91, 0xcf, 0x91, 0x1f, 0x91, 
		  0x0f, 0x91, 0x08, 0x95, 0x55, 0x27, 0x00, 0x24, 
		  0x80, 0xff, 0x02, 0xc0, 0x06, 0x0e, 0x57, 0x1f, 
		  0x66, 0x0f, 0x77, 0x1f, 0x61, 0x15, 0x71, 0x05, 
		  0x21, 0xf0, 0x96, 0x95, 0x87, 0x95, 0x00, 0x97, 
		  0x99, 0xf7, 0x95, 0x2f, 0x80, 0x2d, 0x08, 0x95, 
		  0xa1, 0xe2, 0x1a, 0x2e, 0xaa, 0x1b, 0xbb, 0x1b, 
		  0xea, 0x2f, 0xfb, 0x2f, 0x0d, 0xc0, 0xaa, 0x1f, 
		  0xbb, 0x1f, 0xee, 0x1f, 0xff, 0x1f, 0xa2, 0x17, 
		  0xb3, 0x07, 0xe4, 0x07, 0xf5, 0x07, 0x20, 0xf0, 
		  0xa2, 0x1b, 0xb3, 0x0b, 0xe4, 0x0b, 0xf5, 0x0b, 
		  0x66, 0x1f, 0x77, 0x1f, 0x88, 0x1f, 0x99, 0x1f, 
		  0x1a, 0x94, 0x69, 0xf7, 0x60, 0x95, 0x70, 0x95, 
		  0x80, 0x95, 0x90, 0x95, 0x26, 0x2f, 0x37, 0x2f, 
		  0x48, 0x2f, 0x59, 0x2f, 0x6a, 0x2f, 0x7b, 0x2f, 
		  0x8e, 0x2f, 0x9f, 0x2f, 0x08, 0x95, 0x2f, 0x92, 
		  0x3f, 0x92, 0x4f, 0x92, 0x5f, 0x92, 0x6f, 0x92, 
		  0x7f, 0x92, 0x8f, 0x92, 0x9f, 0x92, 0xaf, 0x92, 
		  0xbf, 0x92, 0xcf, 0x92, 0xdf, 0x92, 0xef, 0x92, 
		  0xff, 0x92, 0x0f, 0x93, 0x1f, 0x93, 0xcf, 0x93, 
		  0xdf, 0x93, 0xcd, 0xb7, 0xde, 0xb7, 0xca, 0x1b, 
		  0xdb, 0x0b, 0x0f, 0xb6, 0xf8, 0x94, 0xde, 0xbf, 
		  0x0f, 0xbe, 0xcd, 0xbf, 0x09, 0x94, 0x2a, 0x88, 
		  0x39, 0x88, 0x48, 0x88, 0x5f, 0x84, 0x6e, 0x84, 
		  0x7d, 0x84, 0x8c, 0x84, 0x9b, 0x84, 0xaa, 0x84, 
		  0xb9, 0x84, 0xc8, 0x84, 0xdf, 0x80, 0xee, 0x80, 
		  0xfd, 0x80, 0x0c, 0x81, 0x1b, 0x81, 0xaa, 0x81, 
		  0xb9, 0x81, 0xce, 0x0f, 0xd1, 0x1d, 0x0f, 0xb6, 
		  0xf8, 0x94, 0xde, 0xbf, 0x0f, 0xbe, 0xcd, 0xbf, 
		  0xca, 0x2f, 0xdb, 0x2f, 0x08, 0x95, 0x86, 0x00, 
		  0x13, 0x00, 0x50, 0x45, 0x54, 0x52, 0x4f, 0x53, 
		  0x20, 0x72, 0x6f, 0x6f, 0x74, 0x3a, 0x20, 0x72, 
		  0x65, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x61, 0x72, 
		  0x72, 0x69, 0x76, 0x65, 0x64, 0x0a, 0x00, 0x50, 
		  0x45, 0x54, 0x52, 0x4f, 0x53, 0x20, 0x72, 0x6f, 
		  0x6f, 0x74, 0x3a, 0x20, 0x73, 0x65, 0x6e, 0x64, 
		  0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 
		  0x0a, 0x00, 0x50, 0x45, 0x54, 0x52, 0x4f, 0x53, 
		  0x3a, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 
		  0x65, 0x20, 0x74, 0x65, 0x73, 0x74, 0x00, 0x25, 
		  0x73, 0x20, 0x2d, 0x2d, 0x2d, 0x20, 0x25, 0x64, 
		  0x00, 0x50, 0x45, 0x54, 0x52, 0x4f, 0x53, 0x20, 
		  0x72, 0x6f, 0x6f, 0x74, 0x3a, 0x20, 0x63, 0x68, 
		  0x69, 0x6c, 0x64, 0x20, 0x63, 0x72, 0x65, 0x61, 
		  0x74, 0x65, 0x64, 0x0a, 0x00, 0x50, 0x45, 0x54, 
		  0x52, 0x4f, 0x53, 0x20, 0x72, 0x6f, 0x6f, 0x74, 
		  0x3a, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x0a, 0x00, 
		  0x32, 0xcc, 0x00, 0x80, 0x11, 0x84, 0x00, 0x00, 
		  0x00, 0x02, 0x01, 0x00, 0x00, 0x06, 0x0a, 0x00, 
		  0x3c, 0x00, 0x80, 0xe6, 0x90, 0xe0, 0x0e, 0x94, 
		  0x12, 0x80, 0x08, 0x95, 0xcf, 0x93, 0xdf, 0x93, 
		  0xcd, 0xb7, 0xde, 0xb7, 0x6c, 0x97, 0xde, 0xbf, 
		  0xcd, 0xbf, 0x84, 0xe7, 0x90, 0xe0, 0x0e, 0x94, 
		  0x12, 0x80, 0xce, 0x01, 0x01, 0x96, 0x0e, 0x94, 
		  0x06, 0x80, 0xce, 0x01, 0x02, 0x96, 0x0e, 0x94, 
		  0x12, 0x80, 0x6c, 0x96, 0xde, 0xbf, 0xcd, 0xbf, 
		  0xdf, 0x91, 0xcf, 0x91, 0x08, 0x95, 0x32, 0x00, 
		  0x00, 0x00, 0x50, 0x45, 0x54, 0x52, 0x4f, 0x53, 
		  0x20, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x3a, 0x20, 
		  0x69, 0x6e, 0x69, 0x74, 0x0a, 0x00, 0x50, 0x45, 
		  0x54, 0x52, 0x4f, 0x53, 0x20, 0x63, 0x68, 0x69, 
		  0x6c, 0x64, 0x3a, 0x20, 0x67, 0x6f, 0x74, 0x20, 
		  0x61, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 
		  0x64, 0x0a, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
		  0x31, 0xcc, 0x00, 0x00, 0x00, 0x4c, 0x61, 0x74, 
		  0x00, 0x33, 0x39, 0x00, 0x31, 0xcc, 0x00, 0x00, 
		  0x02, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4b, 
		  0x4d, 0x00, 0x31, 0x30, 0x30, 0x00, 0x31, 0xcc, 
		  0x00, 0x00, 0x01, 0x4c, 0x6f, 0x6e, 0x00, 0x32, 
		  0x32, 0x00, 0x70, 0x63, 0x33, 0x41, 0x70, 0x70, 
		  0x00//, 0x00

		  };


	
		static PoUART con;
	private static final String TAG = "PoAppPillLoader";
	private static int offset = 0;
	private static final PoAppPillLoader INSTANCE = new PoAppPillLoader();
	private static byte[] rootAgentID;
	private static STATE APP_STATE;

	int bundleSize;
	int dataSent;
	int completeMarksPrinted;

	public static PoAppPillLoader getInstance() {
		return INSTANCE;
	}
	private PoAppPillLoader() {
		APP_STATE = STATE.IDLE;
		rootAgentID = new byte[4];
		/*
		String l = getConfigSetting("Lat");
		Log.e(TAG, "l to double: "+Double.parseDouble(l));
		*/
	}
	
	public boolean isAppRunning() {
		return (APP_STATE == STATE.RUNNING);
	}

	public void loadAndStartApp() {
		if(APP_STATE == STATE.RUNNING)
			return;
		con = new PoUART(this);
		retrieveBundleSize();	
		sendFirstPacket();	
	}
	public void startApp() {
		//con = new PoUART(this);
		sendAppStartPacket();
		APP_STATE = STATE.RUNNING;
	}
	public void killRunningApp() {
		if(APP_STATE == STATE.IDLE)
			return;
		con = new PoUART(this);
		byte[] buf = new byte[5];
		buf[0] = (byte)0x09;
		
		for(int i = 1; i <= 4; i++)
			buf[i] = rootAgentID[i-1];
		sendKillPacket(buf);
	}
	
	/**
     * Function retrieving application bundle size from file and
	 * converting it to the int value.
     *     
     */
	
	private void retrieveBundleSize()  {		
		byte bundleSizeArray[] = new byte[4];
		bundleSizeArray[0] = (byte) (androidAppBundle[0] & 0xFF);
		bundleSizeArray[1] = (byte) (androidAppBundle[1] & 0xFF);
		bundleSizeArray[2] = (byte) (androidAppBundle[2] & 0xFF);
		bundleSizeArray[3] = (byte) (androidAppBundle[3] & 0xFF);
		
		bundleSize = byteArrayToInt(bundleSizeArray, 0);
		Log.w(TAG, "Application bundle size: " + bundleSize);
	}
	
    /**
     * Function converting array of bytes into integer value.
     *
     * NOTE: Little endian assumed here.
     *
     * @param b array of bytes to convert
     * @param offset where to start converting
     *
     * @return int value
     */
	private int byteArrayToInt(byte[] b, int offset) {
		int value = 0;
		for (int i = 0; i < 4; i++) {
			int shift = (i) * 8;
			value += (b[i + offset] & 0x000000FF) << shift;		
		}
		return value;
	}
	private void sendAppStartPacket() {
		byte payload[] = new byte[1];
		payload[0] = (byte)0x06; // APP_PILL_CONTROL_START	
		
		con.sendPacket((byte)0x01, payload);
	}
	/**
	  * Function sending first packet to the node so 
	  * it can initialize application bundle upload.
	  *     
	  */
		
	private void sendFirstPacket() {
		byte payload[] = {(byte)0x01}; // APP_PILL_CONTROL_START_UPLOAD
		con.sendPacket((byte)0x01, payload);	
	}
	/**
	  * Function sending data packet with the specified byte
	  * payload. .
	  *   
	  * @param payload array of bytes to send to the node
	  */
			
	private void sendDataPacket(byte[] payload) {
		con.sendPacket((byte)0x02, payload);	
	}	
	/**
     * Function called when new UART packet is received from the node.
     *   
     * If node is ready for new data packet, send it. 
     * If node notifies upload error, show message and exit the application.
     * If node notifies upload finish, show message and exit the application.
     *
     * @param channel byte representing channel
     * @param payload payload of the received message
     */
	
	public void packetReceived(byte channel, byte[] payload) {
		//System.out.println("Packet received on channel " + channel + "\n" + new String(payload));
						
		if (channel == 0x01 && payload.length == 1)  // control packet
			switch (payload[0]) {
				case 0x02:  // node finished uploading
					Log.w(TAG, "\nDone!");
					offset = 0;
					this.startApp();
					//con.cancel();
					break;
				case 0x03:  // node ready for data
						int maxlen = con.getMaxPayloadLen();
						byte data[] = new byte[maxlen];
						int i;
						for(i = 0; ((i < maxlen) && ((i+offset) < bundleSize)); i++ ) {
							data[i] = (byte) (androidAppBundle[i+offset] & 0xFF);
						}
						offset += i;
						Log.w(TAG, "Sending: "+byteArrayToAscii(data));
						this.sendDataPacket(data);
						break;
				case 0x04: // upload error
					Log.w(TAG, "\nUpload error notified by PoAppPillM!");
					break;
				case 0x07: // application started
					Log.w(TAG, "\nApplication root agent started!");
					con.cancel();
					break;
				case 0x08: // application starting error
					Log.w(TAG, "\nError when trying to start application root agent!");	
					break;
				case 0x0B:
					Log.w(TAG, "\nError when trying to KILL application root agent!");
					break;
			} 
	
	else if (channel == 0x01 && payload.length == 5)
		
		if(payload[0] == 0x07) {
			PoAPI.setHostsRootAgent(true);
			Log.w(TAG, "\nApplication root agent started!(L==5)");
			for(int i = 0; i < 4; i++)
				rootAgentID[i] = payload[1+i];
			con.cancel();
		}
		
		if(payload[0] == 0x0A) {
			PoAPI.setHostsRootAgent(false);
			Log.w(TAG, "\nApplication root agent KILLED SUCCESSFULLY!!");
			con.cancel();
		}
	}
	
	/*
	 * sendKillPacket()
	 * kills current application.
	 */
	private void sendKillPacket(byte[] payload) {
		if(APP_STATE == STATE.RUNNING) {
			PoAPI.setHostsRootAgent(false);
			con.sendPacket((byte)0x01, payload);
			APP_STATE = STATE.IDLE;
			Toast.makeText(PoApp.getInstance().getApplicationContext(), 
					"Application Killed!", Toast.LENGTH_SHORT).show();
		
		}
	}
	
	private String byteArrayToAscii(byte[] b) {
		String result = "";
		if(b == null)
			return result;

		for (int i=0; i < b.length; i++) {
		    result +=
		    Integer.toString( ( b[i] & 0xff ) + 0x100, 16).substring( 1 );
		}
		return result;
	}
	
	public static String getConfigSetting(String setting) {
		byte[] settingBytes = setting.getBytes();
		boolean found = false;
		int i;
		StringBuffer s = new StringBuffer();
		
		for(i = 0; i < androidAppBundle.length-setting.length()-1; i++) {
			found = true;
			for(int j = 0; j < setting.length(); j++) {
				if(! (androidAppBundle[i+j] == settingBytes[j]) ) {
					found = false;
					break;
				}
			}
			if(found)
				break;
		}
		if(found) { // i now ponts to the first ascii character of our setting string.
			i += (setting.length()+1);	// i now points to the start of the setting value
			
			char ch = (char)androidAppBundle[i];
			
			while(ch != 0x00) {
				s.append(ch);
				ch = (char)androidAppBundle[++i];
			}
		}
		Log.e(TAG, "Extracted value: "+setting+" = "+s.toString());
		return s.toString();
	}
	
	enum STATE {
		RUNNING,
		IDLE
	};
	
}
